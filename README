# react_best_practices
Learning about React Best Practices

Following the tutorial

https://youtube.com/watch?v=5r25Y9Vg2P4

No working code was introduced. Only snippets.

AGENDA:
1. Keeping project wide constants in a separate file.
2. Consistency in project structure.
   - To be further researched: State management: Context API, Zustand, Redux
3. Well structured project, by using Components for reusable and/or distinct UI elements.
4. Avoid unnecessary <div></div> by using <></>.
5. Don't add layout styles to reusable components. Options to use:
   - wrapping with <div></div>
   - className prop which gets merged with the reusable one
6. Use TypeScript to catch low hanging fruit bugs.
7. Keep components:
   - simple (often dumb)
   - rather general than specific in use
   - agnostic to specific use case
   - reusable to other use cases
   - dont pass state if not necessarily nedded
8. Dont pass down SetState, insted use a separate event handler function
   - dont pass setState function through intermediaries ("prop drilling") _instead_ use State management solution OR use Children Pattern (additional benefit: rerender of parent does not cause rerender of children).
   - setState((prev) => [...prev, {...}] allows no additional logic; better to use an updater function handleAddItem(item: Item || itemMembers) which is passed down
9. Use convention: onAddTodo={handleAddTodo} and/or onClick={handleClickEvent} (keeping components lean/reusable)
